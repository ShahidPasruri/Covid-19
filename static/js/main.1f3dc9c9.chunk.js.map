{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.jsx","App.js","index.js","components/Footer/Footer.module.css","components/Chart/Chart.module.css","App.module.css","components/CountryPicker/CountryPicker.module.css","images/covid-19.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","Slide","direction","in","mountOnEnter","unmountOnExit","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","separator","duration","Date","toDateString","recoverd","death","root","CircularProgress","url","fetchData","country","a","chaneableurl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","chnageHandle","fetchedCountries","setFetchedCountries","FormControl","formcontrol","NativeSelect","defaultValue","onChange","e","target","i","key","Footer","footer","footertext","href","App","state","handleCountryChange","setState","this","src","caronaimage","image","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,SAAW,wBAAwB,KAAO,oBAAoB,MAAQ,uB,8OC2E3KC,EArEH,SAAC,GAAkD,IAAD,IAAhDC,KAAMC,EAA0C,EAA1CA,UAAUC,EAAgC,EAAhCA,UAAUC,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,WAE3C,OAAIH,EAaA,yBAAKI,UAAWC,IAAOC,WAKnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAEpC,kBAACC,EAAA,EAAD,CAAOC,UAAU,KAAKC,GAAIZ,EAAWa,cAAY,EAACC,eAAa,GAE/D,kBAACP,EAAA,EAAD,CAAMQ,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGf,UAAWgB,IAAGf,IAAOgB,KAAKhB,IAAOiB,WAE5E,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MACpB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAK7B,EAAU8B,MAAOC,UAAU,IAAIC,SAAU,OAEjE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAK9B,GAAY+B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,yCAMJ,kBAACjB,EAAA,EAAD,CAAOC,UAAU,KAAKC,GAAIZ,EAAWa,cAAY,EAACC,eAAa,GAC/D,kBAACP,EAAA,EAAD,CAAMQ,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGf,UAAWgB,IAAGf,IAAOgB,KAAKhB,IAAO8B,WAC5E,kBAACZ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MACpB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAK5B,EAAU6B,MAAQC,UAAU,IAAIC,SAAU,OAElE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAK9B,GAAY+B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,2CAIJ,kBAACjB,EAAA,EAAD,CAAOC,UAAU,KAAKC,GAAIZ,EAAWa,cAAY,EAACC,eAAa,GAC/D,kBAACP,EAAA,EAAD,CAAMQ,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGf,UAAWgB,IAAGf,IAAOgB,KAAKhB,IAAO+B,QAC5E,kBAACb,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MACpB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAK3B,EAAO4B,MAAQC,UAAU,IAAIC,SAAU,OAE/D,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAK9B,GAAY+B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,qCAvDD,yBAAKvB,UAAWC,IAAOgC,MAC9B,kBAACC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAkBb,MAAM,gB,yBCV3Bc,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACjBC,EAAaJ,EACVE,IACCE,EAAa,GAAD,OAAIJ,EAAJ,sBAAqBE,IAHpB,kBAMoDG,IAAMC,IAAIF,GAN9D,2BAMT5C,KAAQC,EANC,EAMDA,UAAWC,EANV,EAMUA,UAAWC,EANrB,EAMqBA,OAAQC,EAN7B,EAM6BA,WAN7B,kBAoBV,CAAEH,YAAWC,YAAWC,SAAQC,eApBtB,kCAsBjB2C,QAAQC,IAAR,MAtBiB,0DAAH,sDA2BTC,EAAc,uCAAG,gCAAAN,EAAA,+EAECE,IAAMC,IAAN,UAAaN,EAAb,WAFD,uBAEdxC,EAFc,EAEdA,KACFkD,EAAelD,EAAKmD,KAAI,SAACC,GAAD,MAAgB,CAC1CnD,UAAWmD,EAAUnD,UAAUoD,MAC/BlD,OAAQiD,EAAUjD,OAAOkD,MACzBC,KAAMF,EAAUG,eANE,kBAQfL,GARe,yFAAH,qDAedM,EAAc,uCAAC,8BAAAb,EAAA,+EAEWE,IAAMC,IAAN,UAAaN,EAAb,eAFX,uBAEPiB,EAFO,EAEbzD,KAAMyD,UAFO,kBAIdA,EAAUN,KAAI,SAACT,GAAD,OAAWA,EAAQgB,SAJnB,yFAAD,qD,yBC4BZC,EArED,SAAC,GAAyD,IAAD,IAAtD3D,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAUuC,EAAc,EAAdA,QAAc,EAEjCkB,mBAAS,IAFwB,mBAE5DR,EAF4D,KAEjDS,EAFiD,KAGnEC,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbkB,EADa,SACMZ,IADN,6EAAH,qDAIdc,KACD,IAEH,IAAMC,EACFZ,EAAUa,OACL,kBAAC,IAAD,CACGjE,KAAM,CACFkE,OAAQd,EAAUD,KAAI,qBAAGG,QACzBa,SAAU,CAAC,CACPnE,KAAMoD,EAAUD,KAAI,qBAAGlD,aACvBmE,MAAO,WACPC,YAAa,UACbC,MAAM,GAIP,CACCtE,KAAMoD,EAAUD,KAAI,qBAAGhD,UACvBiE,MAAO,SACPC,YAAa,MACbE,gBAAiB,oBACjBD,MAAM,OAGZ,yBAAKjE,UAAWC,IAAOgC,MAChC,kBAACC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAkBb,MAAM,eAIvB8C,EACFvE,EAEO,kBAAC,IAAD,CACCD,KAAM,CACFkE,OAAQ,CAAC,WAAY,WAAY,UACjCC,SAAU,CAAC,CAAEC,MAAO,SAAUG,gBAAgB,CAAC,sBAAuB,sBAAuB,uBAC7FvE,KAAM,CAACC,EAAU8B,MAAO7B,EAAU6B,MAAO5B,EAAO4B,UAGpD0C,QAAS,CACLC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsBnC,OAMvD,yBAAKrC,UAAWC,IAAOgC,MAC1B,kBAACC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAkBb,MAAM,eAGhC,OACI,yBAAKrB,UAAWC,IAAOC,WAClBmC,EAAU8B,EAAWR,I,mCCtClBc,EAxBK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAAgB,EAEanB,mBAAS,IAFtB,mBAE5BoB,EAF4B,KAEVC,EAFU,KAclC,OAXDnB,qBAAU,YACQ,uCAAE,sBAAAnB,EAAA,kEACZsC,EADY,SACczB,IADd,6EAAF,qDAIdO,KACF,CAACkB,IAMN,kBAACC,EAAA,EAAD,CAAa7E,UAAWC,IAAO6E,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAKR,EAAaQ,EAAEC,OAAOzD,SAC/D,4BAAQA,MAAM,IAAd,UACCiD,EAAiB7B,KAAI,SAACT,EAAQ+C,GAAT,OAAa,4BAAQC,IAAKD,EAAG1D,MAAOW,GAAUA,S,iBCV9DiD,EAXK,WAChB,OACG,4BAAQtF,UAAWC,IAAOsF,QACtB,yBAAKvF,UAAWC,IAAOC,WACnB,uBAAGF,UAAWC,IAAOuF,YAArB,8CAA4E,uBAAGxF,UAAWC,IAAOqC,EAAGmD,KAAK,sCAA7B,qB,kCCkC5EC,E,4MAlCfC,MAAM,CACFhG,KAAK,GACL0C,QAAQ,I,EAUZuD,oB,uCAAqB,WAAMvD,GAAN,eAAAC,EAAA,sEACCF,EAAUC,GADX,OACX1C,EADW,OAEjB,EAAKkG,SAAS,CAAClG,KAAKA,EAAK0C,QAAQA,IAFhB,2C,wPANHD,I,OAAZzC,E,OACNmG,KAAKD,SAAS,CAAClG,KAAKA,I,qIAWP,IAAD,EACiBmG,KAAKH,MAAnBhG,EADH,EACGA,KAAK0C,EADR,EACQA,QACZ,OAEI,yBAAKrC,UAAWC,IAAOC,WACvB,yBAAK6F,IAAKC,IAAahG,UAAWC,IAAOgG,MAAOC,IAAI,aACjD,kBAAC,EAAD,CAAOvG,KAAMA,IACb,kBAAC,EAAD,CAAe+E,aAAcoB,KAAKF,sBAClC,kBAAC,EAAD,CAAOjG,KAAMA,EAAM0C,QAASA,IAC5B,kBAAC,EAAD,W,GA5BG8D,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,U,mBCH/ChH,EAAOC,QAAU,CAAC,EAAI,oB,mBCAtBD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.1f3dc9c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1C_-P\",\"card\":\"Cards_card__f2aPZ\",\"infected\":\"Cards_infected__24PxI\",\"recoverd\":\"Cards_recoverd__21a_B\",\"root\":\"Cards_root__1ruNv\",\"death\":\"Cards_death__JnKnJ\"};","import React from 'react';\r\nimport styles from './Cards.module.css'\r\nimport cx from 'classnames';\r\nimport {Card,CardContent,Typography,Grid,CircularProgress,Slide} from '@material-ui/core'\r\nimport CountUp from 'react-countup';\r\n\r\n\r\n const Cards=({data:{confirmed,recovered,deaths,lastUpdate}})=>{\r\n\r\n     if(!confirmed){\r\n         return <div className={styles.root}>\r\n         <CircularProgress />\r\n         <CircularProgress color=\"secondary\" />\r\n       </div>;\r\n     }\r\n\r\n\r\n \r\n\r\n     return(\r\n         \r\n         \r\n         <div className={styles.container}>\r\n         {/* {carding} */}\r\n         \r\n\r\n         \r\n             <Grid container spacing={3} justify='center'>\r\n\r\n             <Slide direction=\"up\" in={confirmed} mountOnEnter unmountOnExit>\r\n                         \r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n\r\n             <CardContent>\r\n                 <Typography color='textSecondary' gutterBottom>Infected </Typography>\r\n                 <Typography variant='h5' >\r\n                 <CountUp start={0} end={confirmed.value} separator=',' duration={2.5}/>\r\n                  </Typography>\r\n                 <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                 <Typography variant='body2'>Number Of Active Cases Of Covid-19</Typography>\r\n             </CardContent>\r\n             </Grid>\r\n             </Slide>\r\n\r\n            \r\n             <Slide direction=\"up\" in={confirmed} mountOnEnter unmountOnExit>\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recoverd)}>\r\n             <CardContent>\r\n                 <Typography color='textSecondary' gutterBottom>Recoverd </Typography>\r\n                 <Typography variant='h5' >\r\n                 <CountUp start={0} end={recovered.value}  separator=',' duration={2.5}/>\r\n                 </Typography>\r\n                 <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                 <Typography variant='body2'>Number Of Recoverd Cases Of Covid-19</Typography>\r\n             </CardContent>\r\n             </Grid>\r\n             </Slide>\r\n             <Slide direction=\"up\" in={confirmed} mountOnEnter unmountOnExit>\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.death)}>\r\n             <CardContent>\r\n                 <Typography color='textSecondary' gutterBottom>Death </Typography>\r\n                 <Typography variant='h5' > \r\n                 <CountUp start={0} end={deaths.value}  separator=',' duration={2.5}/>\r\n                 </Typography>\r\n                 <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                 <Typography variant='body2'>Number Of Deaths Of Covid-19</Typography>\r\n             </CardContent>\r\n             </Grid>\r\n             </Slide>\r\n\r\n             </Grid>\r\n             \r\n         </div>\r\n     )\r\n }\r\n\r\n export default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let chaneableurl=url;\r\n        if(country){\r\n            chaneableurl=`${url}/countries/${country}`\r\n        }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(chaneableurl);\r\n        \r\n\r\n        /*\r\n           just like\r\n            const {data}=await axios.get(url)\r\n             const modifieddata={\r\n             confirmed:data.confirmed\r\n             recoverd:data.recoverd\r\n             deaths:data.deaths\r\n                               }\r\n         */\r\n\r\n        // const modifiedData = { confirmed,recovered,deaths}\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries=async()=>{\r\n    try {\r\n        const {data:{countries}}=await axios.get(`${url}/countries`);\r\n       \r\n       return countries.map((country)=>country.name)\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css'\r\nimport {CircularProgress} from '@material-ui/core'\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\r\n    const [dailyData, setDailyData] = useState([])\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ?\r\n            (<Line\r\n                data={{\r\n                    labels: dailyData.map(({ date }) => date),\r\n                    datasets: [{\r\n                        data: dailyData.map(({ confirmed }) => confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                        \r\n                        \r\n                        \r\n                    }, {\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255,0,0,0.5)',\r\n                        fill: true\r\n                    }]\r\n                }}\r\n            />) : <div className={styles.root}>\r\n         <CircularProgress />\r\n         <CircularProgress color=\"secondary\" />\r\n       </div>\r\n    );\r\n    // console.log(confirmed, recovered, deaths)\r\n    const barChart = (\r\n        confirmed\r\n\r\n            ? (<Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recoverd', 'Deaths'],\r\n                    datasets: [{ label: 'People', backgroundColor:['rgba(0, 0, 255,0.5)', 'rgba(0, 255, 0,0.5)', 'rgba(255, 0, 0,0.5)']  ,\r\n                    data: [confirmed.value, recovered.value, deaths.value]}],\r\n                   \r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current State In ${country}` }\r\n                }}\r\n\r\n            />\r\n\r\n\r\n            ) :<div className={styles.root}>\r\n            <CircularProgress />\r\n            <CircularProgress color=\"secondary\" />\r\n          </div>)\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart","import React, { useState, useEffect } from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport{fetchCountries} from '../../api'\r\n\r\n\r\n const CountryPicker=({chnageHandle})=>{\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([])\r\n    useEffect(() => {\r\n        const fetchAPI= async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n    // console.log(fetchedCountries)\r\n\r\n\r\n     return(\r\n <FormControl className={styles.formcontrol}>\r\n     <NativeSelect defaultValue='' onChange={(e)=>chnageHandle(e.target.value)} >\r\n         <option value=''>Global</option>\r\n         {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n     </NativeSelect>\r\n </FormControl>\r\n     )\r\n }\r\n\r\n export default CountryPicker;","import React from 'react';\r\nimport styles from './Footer.module.css';\r\n\r\nexport const Footer=()=>{\r\n    return(\r\n       <footer className={styles.footer}>\r\n           <div className={styles.container}>\r\n               <p className={styles.footertext}>CopyRight 2020 Covid-19-Tracker Created By <a className={styles.a} href=\"http://facebook.com/shahidpasruri1\">ShahidPasruri</a></p>\r\n               {/* <p>Created By <a href=\"http://facebook.com/shahidpasruri1\">ShahidPasruri</a></p> */}\r\n           </div>\r\n       </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {Cards,Chart,CountryPicker,Footer} from './components'\r\nimport styles from './App.module.css'\r\nimport {fetchData} from './api/index'\r\nimport caronaimage from './images/covid-19.png'\r\n\r\nclass App extends React.Component{\r\nstate={\r\n    data:{},\r\n    country:'',\r\n}\r\n\r\nasync componentDidMount(){\r\nconst data= await fetchData();\r\nthis.setState({data:data})\r\n\r\n\r\n}\r\n\r\nhandleCountryChange= async(country)=> {\r\n    const data= await fetchData(country);\r\n    this.setState({data:data,country:country})\r\n    \r\n}\r\n\r\n    render(){\r\n        const {data,country}=this.state;\r\n        return (\r\n\r\n            <div className={styles.container}> \r\n            <img src={caronaimage} className={styles.image} alt='Covid-19'/>\r\n               <Cards data={data}/>\r\n               <CountryPicker chnageHandle={this.handleCountryChange}/>\r\n               <Chart data={data} country={country}/>\r\n               <Footer/>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDom.render(<App/>,document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"a\":\"Footer_a__2B38y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__17_6X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2o4Hy\",\"image\":\"App_image__3Ynf4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formcontrol\":\"CountryPicker_formcontrol__YCuCS\"};","module.exports = __webpack_public_path__ + \"static/media/covid-19.d7265326.png\";"],"sourceRoot":""}